data
ddi <- read_ipums_ddi("data.dat")
help "read"
data$
data <- read_ipums_micro(ddi)
install.packages('ipumsr')
knitr::opts_chunk$set(echo = TRUE)
setwd()
data <- read.csv("data.csv")
data <- read.csv("data.csv") %>% as.data.frame(data)
data <- read.csv("data.csv")
data <- as.data.frame(data)
data <- read.csv("data.csv")
data.df <- as.data.frame(data)
data <- read.csv("data.csv")
data.df <- as.data.frame(data)
filter(data.df, SCHAPPY <= 6)
data <- read.csv("data.csv")
data.df <- as.data.frame(data)
filter(data.df, data.df$SCHAPPY <= 6)
data <- read.csv("data.csv")
data.df %>%
as.data.frame(data) %>%
data.df[!(data.df$SCHAPPY > 6)]
library(tidyverse)
data <- read.csv("data.csv")
data.df %>%
as.data.frame(data) %>%
data.df[!(data.df$SCHAPPY > 6)]
data <- read.csv("data.csv")
data.df <- as.data.frame(data)
data.df[!(data.df$SCHAPPY > 6)]
data <- read.csv("data.csv")
data.df <- as.data.frame(data)
data.df <- data.df[!(data.df$SCHAPPY > 6)]
knitr::opts_chunk$set(echo = TRUE)
data <- read.csv("data.csv")
data.df <- as.data.frame(data)
data.df$SCHAPPY
data.df <- data.df[!(data.df$SCHAPPY > 6)]
data <- read.csv("data.csv")
data.df <- as.data.frame(data)
data.df$SCHAPPY
data.df <- data.df[!(data.df$SCHAPPY > 6),]
data <- read.csv("data.csv")
data.df <- as.data.frame(data)
data.df <- data.df[!(data.df$SCHAPPY > 6),]
data <- read.csv("data.csv")
data.df <- as.data.frame(data)
data.df <- data.df[!(data.df$SCHAPPY > 6),]
data.df
data <- read.csv("data.csv")
data.df %>%
as.data.frame(data) %>%
data.df[!(data.df$SCHAPPY > 6),]
data <- read.csv("data.csv")
data.df %<%
as.data.frame(data) %<%
data.df[!(data.df$SCHAPPY > 6),]
library(tidyverse)
library(dplyr)
data <- read.csv("data.csv")
data.df %<%
as.data.frame(data) %<%
data.df[!(data.df$SCHAPPY > 6),]
data <- read.csv("data.csv")
data.df %>%
as.data.frame(data) %>%
data.df[!(data.df$SCHAPPY > 6),]
data <- read.csv("data.csv")
data.df <-as.data.frame(data)
data.df %>%
data.df[!(data.df$SCHAPPY > 6),]
data <- read.csv("data.csv")
data.df <-as.data.frame(data)
data.df <- data.df[!(data.df$SCHAPPY > 6),]
library(tidyverse)
library(dplyr)
library(ggplot2)
data <- read.csv("data.csv")
data.df <-as.data.frame(data)
data.df <- data.df[!(data.df$SCHAPPY > 6),]
data.df %>%
ggplot(aes(x = YEAR, y = SCHAPPY))
data <- read.csv("data.csv")
data.df <-as.data.frame(data)
data.df <- data.df[!(data.df$SCHAPPY > 6),]
data.df %>%
ggplot(aes(x = YEAR, y = SCHAPPY)) +
geom_bar()
data <- read.csv("data.csv")
data.df <-as.data.frame(data)
data.df <- data.df[!(data.df$SCHAPPY > 6),]
data.df %>%
ggplot(aes(x = YEAR, y = SCHAPPY)) +
geom_histogram()
data <- read.csv("data.csv")
data.df <-as.data.frame(data)
data.df <- data.df[!(data.df$SCHAPPY > 6),]
data.df %>%
ggplot(aes(x = YEAR, y = SCHAPPY)) +
geom_point()
data <- read.csv("data.csv")
data.df <-as.data.frame(data)
data.df <- data.df[!(data.df$SCHAPPY > 6),]
data.df %>%
ggplot(aes(x = SCHAPPY)) +
geom_bar(color = YEAR)
data <- read.csv("data.csv")
data.df <-as.data.frame(data)
data.df <- data.df[!(data.df$SCHAPPY > 6),]
data.df %>%
ggplot(aes(x = SCHAPPY)) +
geom_bar(color = data.df$YEAR)
data <- read.csv("data.csv")
data.df <-as.data.frame(data)
data.df <- data.df[!(data.df$SCHAPPY > 6),]
data.df %>%
ggplot(aes(x = SCHAPPY)) +
geom_bar()
data <- read.csv("data.csv")
data.df <-as.data.frame(data)
wages <- read.csv("wages.csv")
wages.df <- as.data.frame(wages)
data.df <- data.df[!(data.df$SCHAPPY > 6),]
data.df %>%
ggplot(aes(x = SCHAPPY)) +
geom_bar()
data <- read.csv("data.csv")
data.df <-as.data.frame(data)
wages <- read.csv("wages.csv")
wages.df <- as.data.frame(wages)
data.df <- data.df[!(data.df$SCHAPPY > 6),]
data.df %>%
ggplot(aes(y = SCHHAPPY, x = wages$HOURWAGE)) +
geom_point()
data <- read.csv("data.csv")
data.df <-as.data.frame(data)
wages <- read.csv("wages.csv")
wages.df <- as.data.frame(wages)
data.df <- data.df[!(data.df$SCHAPPY > 6),]
data.df %>%
ggplot(aes(y = SCHAPPY, x = wages$HOURWAGE)) +
geom_point()
data <- read.csv("data.csv")
data.df <-as.data.frame(data)
wages <- read.csv("wages.csv")
wages.df <- as.data.frame(wages)
data.df %>%
ggplot(aes(y = SCHAPPY, x = wages$HOURWAGE)) +
geom_point()
data <- read.csv("data.csv")
data.df <-as.data.frame(data)
wages <- read.csv("wages.csv")
wages.df <- as.data.frame(wages)
data.df %>%
ggplot(aes(y = filter(SCHAPPY <= 6), x = wages$HOURWAGE)) +
geom_point()
data <- read.csv("data.csv")
data.df <-as.data.frame(data)
wages <- read.csv("wages.csv")
wages.df <- as.data.frame(wages)
data.df %>%
ggplot(aes(y = filter(data.df, SCHAPPY <= 6), x = wages$HOURWAGE)) +
geom_point()
data <- read.csv("data.csv")
data.df <-as.data.frame(data)
wages <- read.csv("wages.csv")
wages.df <- as.data.frame(wages)
data.df %>%
ggplot(aes(y = filter(data.df, SCHAPPY <= 6), x = wages.df$HOURWAGE)) +
geom_point()
data <- read.csv("data.csv")
data.df <-as.data.frame(data)
wages <- read.csv("wages.csv")
wages.df <- as.data.frame(wages)
data.df %>%
ggplot(aes(y = filter(data.df, SCHAPPY <= 6), x = wages.df$HOURWAGE))
data <- read.csv("data.csv")
data.df <-as.data.frame(data)
wages <- read.csv("wages.csv")
wages.df <- as.data.frame(wages)
data.df %>%
ggplot(aes(y = SCHAPPY, x = wages.df$HOURWAGE))
data <- read.csv("data.csv")
data.df <-as.data.frame(data)
wages <- read.csv("wages.csv")
wages.df <- as.data.frame(wages)
data.df %>%
ggplot(aes(y = SCHAPPY, x = wages.df$HOURWAGE))
data <- read.csv("data.csv")
data.df <-as.data.frame(data)
wages <- read.csv("wages.csv")
wages.df <- as.data.frame(wages)
data.df %>%
ggplot(aes(y = SCHAPPY, x = wages.df$HOURWAGE)) +
geom_point
data <- read.csv("data.csv")
data.df <-as.data.frame(data)
wages <- read.csv("wages.csv")
wages.df <- as.data.frame(wages)
data.df %>%
ggplot(aes(y = SCHAPPY, x = wages.df$HOURWAGE)) +
geom_point()
tinytex::reinstall_tinytex()
# setting the default visibility of code chunks to FALSE
library(knitr)
opts_chunk$set(echo = FALSE)
# load any required packages here
library(haven)
library(broom)
library(tidyverse)
indexes <- read_csv("GINI.csv")
# this is also a good place to load your data sets, so that they are available later on
View(indexes)
# setting the default visibility of code chunks to FALSE
library(knitr)
opts_chunk$set(echo = FALSE)
# load any required packages here
library(haven)
library(broom)
library(tidyverse)
indexes <- read_csv("GINI.csv")
gdp <- read_csv("gdpcap.csv")
# this is also a good place to load your data sets, so that they are available later on
View(gdp)
# setting the default visibility of code chunks to FALSE
library(knitr)
opts_chunk$set(echo = FALSE)
# load any required packages here
library(haven)
library(broom)
library(tidyverse)
indexes <- read_csv("Gini indexes - GINI.csv")
gdp <- read_csv("gdpcap.csv")
# this is also a good place to load your data sets, so that they are available later on
View(gdp)
View(indexes)
summary(indexes)
# setting the default visibility of code chunks to FALSE
library(knitr)
opts_chunk$set(echo = FALSE)
# load any required packages here
library(haven)
library(broom)
library(tidyverse)
indexes <- read_csv("Gini indexes - GINI.csv")
gdp <- read_csv("gdpcap.csv")
# this is also a good place to load your data sets, so that they are available later on
summary(indexes)
# setting the default visibility of code chunks to FALSE
library(knitr)
opts_chunk$set(echo = FALSE)
# load any required packages here
library(haven)
library(broom)
library(tidyverse)
indexes <- read_csv("Gini indexes - GINI.csv") %>%
na.omit()
gdp <- read_csv("gdpcap.csv")
# this is also a good place to load your data sets, so that they are available later on
summary(indexes)
View(indexes)
View(gdp)
# setting the default visibility of code chunks to FALSE
library(knitr)
opts_chunk$set(echo = FALSE)
# load any required packages here
library(haven)
library(broom)
library(tidyverse)
countries <- read_csv("GDP_GINI_COUNTRY.csv")
# this is also a good place to load your data sets, so that they are available later on
summary(countries)
# setting the default visibility of code chunks to FALSE
library(knitr)
opts_chunk$set(echo = FALSE)
# load required packages
library(haven)
library(broom)
library(tidyverse)
data <- read.csv("InequalityCOVID.csv")
data %>%
ggplot(aes(x = GDP)) +
geom_histogram(color = "red", binwidth = 5000)
data %>%
ggplot(aes(x = GINI)) +
geom_histogram(color = "blue", binwidth = 1)
# setting the default visibility of code chunks to FALSE
library(knitr)
opts_chunk$set(echo = FALSE)
# load required packages
library(haven)
library(broom)
library(tidyverse)
data <- read.csv("InequalityCOVID.csv")
summary(data)
data$GDPPC <- data$GDP / data$POP
summary(data)
data %>%
ggplot(aes(x = GDPPC)) +
geom_histogram(color = "purple")
data %>%
ggplot(aes(x = GDP)) +
geom_histogram(color = "red", binwidth = 5000)
data %>%
ggplot(aes(x = GINI)) +
geom_histogram(color = "blue", binwidth = 1)
data %>%
ggplot(aes(x = GDP)) +
geom_histogram(color = "red", binwidth = 100000000)
data %>%
ggplot(aes(x = GINI)) +
geom_histogram(color = "blue", binwidth = 1)
data %>%
ggplot(aes(x = GDP)) +
geom_histogram(color = "red", binwidth = 10000000)
data %>%
ggplot(aes(x = GINI)) +
geom_histogram(color = "blue", binwidth = 1)
data %>%
ggplot(aes(x = GDP)) +
geom_histogram(color = "red", binwidth = 100000000000)
data %>%
ggplot(aes(x = GINI)) +
geom_histogram(color = "blue", binwidth = 1)
data %>%
ggplot(aes(x = GDP)) +
geom_histogram(color = "red", binwidth = 1000000000000)
data %>%
ggplot(aes(x = GINI)) +
geom_histogram(color = "blue", binwidth = 1)
data %>%
ggplot(aes(x = GDP / 100000000000)) +
geom_histogram(color = "red", binwidth = 100)
data %>%
ggplot(aes(x = GINI)) +
geom_histogram(color = "blue", binwidth = 1)
data %>%
ggplot(aes(x = GDP / 100000000000)) +
geom_histogram(color = "red", binwidth = 50)
data %>%
ggplot(aes(x = GINI)) +
geom_histogram(color = "blue", binwidth = 1)
data %>%
ggplot(aes(x = GDP / 100000000000)) +
geom_histogram(color = "red", binwidth = 10)
data %>%
ggplot(aes(x = GINI)) +
geom_histogram(color = "blue", binwidth = 1)
data %>%
ggplot(aes(x = GDP / 100000000000)) +
geom_histogram(color = "red", binwidth = 10) + labs(x = "GDP (by hundred billions)")
data %>%
ggplot(aes(x = GINI)) +
geom_histogram(color = "blue", binwidth = 1)
data %>%
ggplot(aes(x = GDPC)) +
geom_histogram(color = "purple")
data$GDPC <- data$GDP / data$POP
summary(data)
data %>%
ggplot(aes(x = GDP / 100000000000)) +
geom_histogram(color = "red", binwidth = 10) + labs(x = "GDP (by hundred billions)")
data %>%
ggplot(aes(x = GINI)) +
geom_histogram(color = "blue", binwidth = 1)
data %>%
ggplot(aes(x = GDPC)) +
geom_histogram(color = "purple")
data %>%
ggplot(aes(x = GDPC)) +
geom_histogram(color = "purple", binwidth = 1000)
data %>%
ggplot(aes(x = GDPC)) +
geom_histogram(color = "purple", binwidth = 100)
data %>%
ggplot(aes(x = GDPC)) +
geom_histogram(color = "purple", binwidth = 10000)
data %>%
ggplot(aes(x = GDPC)) +
geom_histogram(color = "purple", binwidth = 5000)
model1 <- lm(data = data, formula = PROP_Risk ~ GDPPC)
tidy(model1) %>% kable()
summary(model1)
model1 <- lm(data = data, formula = PROP_Risk ~ GDPC)
tidy(model1) %>% kable()
summary(model1)
model1 <- lm(data = data, formula = PROP_Risk ~ log(GDPC))
tidy(model1) %>% kable()
summary(model1)
model2_aug <- augment(model2, data = data)
model2 <- lm(data = data, formula = PROP_Risk ~ log(GDPC))
tidy(model2) %>% kable()
summary(model2)
model2_aug <- augment(model2, data = data)
ggplot(data = model2_aug) +
geom_point(aes(x = GDPC, y = PROP_Risk)) + geom_line(aes(x = GDPPC, y = .fitted), color = "red") + ggtitle("Infection Risk vs. GDPC")
model1 <- lm(data = data, formula = PROP_Risk ~ GDPC)
tidy(model1) %>% kable()
summary(model1)
model2 <- lm(data = data, formula = PROP_Risk ~ log(GDPC))
tidy(model2) %>% kable()
summary(model2)
model2 <- lm(data = data, formula = PROP_Risk ~ log(GDP))
tidy(model2) %>% kable()
summary(model2)
model2 <- lm(data = data, formula = PROP_Risk ~ log(GDPC))
tidy(model2) %>% kable()
summary(model2)
model2_aug <- augment(model2, data = data)
ggplot(data = model2_aug) +
geom_point(aes(x = GDPC, y = PROP_Risk)) + geom_line(aes(x = GDPPC, y = .fitted), color = "red") + ggtitle("Infection Risk vs. GDPC")
data_NoUS <- subset(data, COUNTRY != "United States")
model3 <- lm(data = data_NoUS, formula = PROP_Risk ~ log(GDPPC))
tidy(model3) %>% kable()
summary(model3)
data_NoUS <- subset(data, COUNTRY != "United States")
model3 <- lm(data = data_NoUS, formula = PROP_Risk ~ log(GDPC))
tidy(model3) %>% kable()
summary(model3)
data_NoUS <- subset(data, COUNTRY != "United States")
model3 <- lm(data = data_NoUS, formula = PROP_Risk ~ log(GDP))
tidy(model3) %>% kable()
summary(model3)
data_NoUS <- subset(data, COUNTRY != "United States")
model3 <- lm(data = data_NoUS, formula = PROP_Risk ~ log(GDPC))
tidy(model3) %>% kable()
summary(model3)
data %>%
ggplot(aes(x = GDP / 100000000000)) +
geom_histogram(color = "red", binwidth = 10) + labs(x = "GDP (by hundred billions)") + ggtitle("National Income")
data %>%
ggplot(aes(x = GINI)) +
geom_histogram(color = "blue", binwidth = 1) +  ggtitle("GINI Index Distribution")
data %>%
ggplot(aes(x = GDP / 100000000000)) +
geom_histogram(color = "red", binwidth = 10) + labs(x = "GDP (by hundred billions)") + ggtitle("National Income")
data %>%
ggplot(aes(x = GINI)) +
geom_histogram(color = "blue", binwidth = 1) +  ggtitle("GINI Index Distribution") + labs(x = "Gini Index")
data %>%
ggplot(aes(x = GDPC)) +
geom_histogram(color = "purple", binwidth = 5000) + ggtitle("National Income (per Capita)")
model1 <- lm(data = data, formula = PROP_Risk ~ GDPC)
tidy(model1) %>% kable()
summary(model1)
model2 <- lm(data = data, formula = PROP_Risk ~ log(GDPC))
tidy(model2) %>% kable()
summary(model2)
model2_aug <- augment(model2, data = data)
ggplot(data = model2_aug) +
geom_point(aes(x = GDPC, y = PROP_Risk)) + geom_line(aes(x = GDPPC, y = .fitted), color = "red") + ggtitle("Infection Risk vs. GDPC")
data_NoUS <- subset(data, COUNTRY != "United States")
model3 <- lm(data = data_NoUS, formula = PROP_Risk ~ log(GDPC))
tidy(model3) %>% kable()
summary(model3)
model3_aug <- augment(model3, data = data_NoUS)
ggplot(data = model3_aug) +
geom_point(aes(x = GDPC, y = PROP_Risk)) + geom_line(aes(x = GDPPC, y = .fitted), color = "red") + ggtitle("Infection Risk vs. GDPC (excl. US)")
model3 <- lm(data = data, formula = PROP_Risk ~ log(GDP))
tidy(model3) %>% kable()
summary(model3)
model4_aug <- augment(model4, data = data_NoUS)
data_NoUS <- subset(data, COUNTRY != "United States")
model4 <- lm(data = data_NoUS, formula = PROP_Risk ~ log(GDP))
tidy(model4) %>% kable()
summary(model4)
model4_aug <- augment(model4, data = data_NoUS)
ggplot(data = model4_aug) +
geom_point(aes(x = GDP, y = PROP_Risk)) + geom_line(aes(x = GDP, y = .fitted), color = "red") + ggtitle("Infection Risk vs. GDPC (excl. US)")
model3_aug <- augment(model3, data = data)
ggplot(data = model3_aug) +
geom_point(aes(x = GDP, y = PROP_Risk)) + geom_line(aes(x = GDP, y = .fitted), color = "red") + ggtitle(Infection Risk Vs. Logged GDP)
model3_aug <- augment(model3, data = data)
ggplot(data = model3_aug) +
geom_point(aes(x = GDP, y = PROP_Risk)) + geom_line(aes(x = GDP, y = .fitted), color = "red") + ggtitle("Infection Risk Vs. Logged GDP")
model7 - lm(data = data, formula = PROP_Isolated ~ log(GDPC) + log(GINI))
model3_aug <- augment(model3, data = data)
ggplot(data = model3_aug) +
geom_point(aes(x = GDP, y = PROP_Risk)) + geom_line(aes(x = GDP, y = .fitted), color = "red") + ggtitle("Infection Risk Vs. Logged GDP")
data_NoUS <- subset(data, COUNTRY != "United States")
model4 <- lm(data = data_NoUS, formula = PROP_Risk ~ log(GDP))
tidy(model4) %>% kable()
summary(model4)
model4_aug <- augment(model4, data = data_NoUS)
ggplot(data = model4_aug) +
geom_point(aes(x = GDP, y = PROP_Risk)) + geom_line(aes(x = GDP, y = .fitted), color = "red") + ggtitle("Infection Risk vs. GDPC (excl. US)")
model4_aug <- augment(model4, data = data_NoUS)
ggplot(data = model4_aug) +
geom_point(aes(x = GDP, y = PROP_Risk)) + geom_line(aes(x = GDP, y = .fitted), color = "red") + ggtitle("Infection Risk vs. GDP (excl. US)")
model5 <- lm(data = data, formula = PROP_Risk ~ log(GDPC) + GINI)
tidy(model5) %>% kable()
summary(model5)
model5 <- lm(data = data, formula = PROP_Risk ~ log(GDP) + GINI)
tidy(model5) %>% kable()
summary(model5)
model6 <- lm(data = data, formula = PROP_Medical ~ log(GDPC) + GINI)
tidy(model6) %>% kable()
summary(model6)
model6 <- lm(data = data, formula = PROP_Medical ~ log(GDP) + GINI)
tidy(model6) %>% kable()
summary(model6)
model6 <- lm(data = data, formula = PROP_Medical ~ log(GDPC) + GINI)
tidy(model6) %>% kable()
summary(model6)
model7 <- lm(data = data, formula = PROP_Isolated ~ log(GDPC) + log(GINI))
tidy(model7) %>% kable()
summary(model7)
model7 <- lm(data = data, formula = PROP_Isolated ~ log(GDP) + log(GINI))
tidy(model7) %>% kable()
summary(model7)
